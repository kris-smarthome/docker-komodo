# Komodo Compose file
# This file is used to deploy Komodo using Docker Compose.
# It defines the services required for Komodo to run, including MongoDB, Komodo Core, and Periphery.
# Make sure to set the environment variables KOMODO_DB_USERNAME and KOMODO_DB_PASSWORD
# in your environment or in a .env file before running this compose file.

services:
  mongo:
    image: mongo
    container_name: komodo-mongo 
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    # ports:
    #   - 27017:27017
    env_file: ./compose.env
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD}
    networks:
      - komodo-app
  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    container_name: komodo-core
    labels:
      - komodo.skip # Prevent Komodo from stopping with StopAllContainers
      - traefik.enable=true
      - traefik.http.routers.komodo.rule=Host(`komodo.evillabs.io`)
      - traefik.http.routers.komodo.entrypoints=websecure
      - traefik.http.routers.komodo.tls.certresolver=letsencrypt
      - traefik.http.services.komodo.loadbalancer.server.port=9120
    restart: unless-stopped
    depends_on:
      - mongo
    #ports:
    #  - 9120:9120
    env_file: ./compose.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes: 
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
    ## Allows for systemd Periphery connection at 
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    networks:
      - traefik
      - komodo-app

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using 
  ## https://github.com/moghtech/komodo/tree/main/scripts
  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    container_name: komodo-periphery
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    env_file: ./compose.env
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
    networks:
      - komodo-app


volumes:
  mongo-data:
  mongo-config:
  repo-cache:

networks:  
  traefik:
    name: "traefik"
    external: true
  komodo-app:
    name: "komodo-app"
    driver: bridge